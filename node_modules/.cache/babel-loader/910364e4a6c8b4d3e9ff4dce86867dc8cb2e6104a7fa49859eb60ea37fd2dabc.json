{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gk010\\\\Desktop\\\\Projects\\\\codeprep\\\\src\\\\Components\\\\Checkbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Checkbox({\n  id,\n  label\n}) {\n  _s();\n  // Initialize the state and retrieve the value from local storage, if available\n  const [isChecked, setIsChecked] = useState(() => {\n    const savedValue = localStorage.getItem(`checkbox_${id}`);\n    return savedValue ? JSON.parse(savedValue) : false;\n  });\n\n  // Update the local storage whenever isChecked changes\n  useEffect(() => {\n    localStorage.setItem(`checkbox_${id}`, JSON.stringify(isChecked));\n  }, [isChecked, id]);\n\n  // Handle the checkbox toggle\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Checkbox, \"GemAWxKBQcqX0JtkvQzcd6Q0fBg=\");\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Checkbox","id","label","_s","isChecked","setIsChecked","savedValue","localStorage","getItem","JSON","parse","setItem","stringify","handleCheckboxChange","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gk010/Desktop/Projects/codeprep/src/Components/Checkbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Checkbox({ id, label }) {\n  // Initialize the state and retrieve the value from local storage, if available\n  const [isChecked, setIsChecked] = useState(() => {\n    const savedValue = localStorage.getItem(`checkbox_${id}`);\n    return savedValue ? JSON.parse(savedValue) : false;\n  });\n\n  // Update the local storage whenever isChecked changes\n  useEffect(() => {\n    localStorage.setItem(`checkbox_${id}`, JSON.stringify(isChecked));\n  }, [isChecked, id]);\n\n  // Handle the checkbox toggle\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={handleCheckboxChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Checkbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC,EAAE;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC/C,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAE,YAAWP,EAAG,EAAC,CAAC;IACzD,OAAOK,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,KAAK;EACpD,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAE,YAAWV,EAAG,EAAC,EAAEQ,IAAI,CAACG,SAAS,CAACR,SAAS,CAAC,CAAC;EACnE,CAAC,EAAE,CAACA,SAAS,EAAEH,EAAE,CAAC,CAAC;;EAEnB;EACA,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjCR,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEL,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,eACEf,OAAA;QACEgB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEZ,SAAU;QACnBa,QAAQ,EAAEJ;MAAqB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAClB,EAAA,CA5BQH,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}