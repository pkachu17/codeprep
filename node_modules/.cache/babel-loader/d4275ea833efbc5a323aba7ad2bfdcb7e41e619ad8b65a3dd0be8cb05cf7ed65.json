{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gk010\\\\Desktop\\\\Projects\\\\codeprep\\\\src\\\\ProblemListAccordion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Checkbox from './Components/Checkbox';\nimport TooltipButton from './Components/TooltipButton';\nimport './ProblemListAccordion.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProblemListAccordion = ({\n  problemsData\n}) => {\n  _s();\n  const [openCategory, setOpenCategory] = useState(null);\n  const statusTooltipMessage = \"Changes saved and fetched from local storage\";\n  console.log(Object.keys(problemsData).map(category => problemsData[category]));\n  const toggleCategory = category => {\n    if (openCategory === category) {\n      setOpenCategory(null);\n    } else {\n      setOpenCategory(category);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-body\",\n    children: Object.keys(problemsData).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `category-header ${openCategory === category ? 'open' : ''}`,\n        onClick: () => toggleCategory(category),\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `problem-list ${openCategory === category ? 'open' : 'close'}`,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"problem-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"problem-table-head\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"problem-table-head-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: problemsData[category].map(problem => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"problem\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"problem-serial\",\n                children: problem.ID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"problem-name\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: problem.Link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: problem.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `problem-difficulty ${problem.Difficulty}`,\n                children: problem.Difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"problem-status\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: problem.ID,\n                  label: problem.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)]\n            }, problem.ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ProblemListAccordion, \"ZPhxLBls8Unotv2asEP3m11tUTM=\");\n_c = ProblemListAccordion;\nexport default ProblemListAccordion;\nvar _c;\n$RefreshReg$(_c, \"ProblemListAccordion\");","map":{"version":3,"names":["React","useState","Checkbox","TooltipButton","jsxDEV","_jsxDEV","ProblemListAccordion","problemsData","_s","openCategory","setOpenCategory","statusTooltipMessage","console","log","Object","keys","map","category","toggleCategory","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","problem","ID","href","Link","target","rel","Name","Difficulty","id","label","_c","$RefreshReg$"],"sources":["C:/Users/gk010/Desktop/Projects/codeprep/src/ProblemListAccordion.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Checkbox from './Components/Checkbox';\nimport TooltipButton from './Components/TooltipButton';\nimport './ProblemListAccordion.css'; // Import your CSS file\n\nconst ProblemListAccordion = ({ problemsData }) => {\n    const [openCategory, setOpenCategory] = useState(null);\n    const statusTooltipMessage = \"Changes saved and fetched from local storage\";\n\n    console.log(Object.keys(problemsData).map((category) => (\n        problemsData[category]\n    )));\n\n    const toggleCategory = (category) => {\n        if (openCategory === category) {\n            setOpenCategory(null);\n        } else {\n            setOpenCategory(category);\n        }\n    };\n\n    return (\n        <div className=\"problem-body\">\n            {Object.keys(problemsData).map((category) => (\n                <div key={category} className=\"category\">\n                    <div\n                        className={`category-header ${openCategory === category ? 'open' : ''}`}\n                        onClick={() => toggleCategory(category)}\n                    >\n                        {category}\n                    </div>\n                    <div className={`problem-list ${openCategory === category ? 'open' : 'close'}`}>\n\n                        <table className='problem-table'>\n                            <thead className='problem-table-head'>\n                                <tr className='problem-table-head-row'>\n                                    <th>No.</th>\n                                    <th>Name</th>\n                                    <th>Difficulty</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {problemsData[category].map((problem) => (\n                                    <tr key={problem.ID} className='problem'>\n                                        <td className='problem-serial'>\n                                            {problem.ID}\n                                        </td>\n                                        <td className=\"problem-name\">\n                                            <a href={problem.Link} target=\"_blank\" rel=\"noopener noreferrer\">{problem.Name}</a>\n                                        </td>\n                                        <td className={`problem-difficulty ${problem.Difficulty}`}>\n                                            {problem.Difficulty}\n                                        </td>\n                                        <td className='problem-status'>\n                                            <Checkbox id={problem.ID} label={problem.Name} />  \n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ProblemListAccordion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}